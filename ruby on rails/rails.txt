-----------------------------------------Ruby on rails -------------------------------------------

1) installation- gem install rails

2) version - rails --version  - Rails 7.0.1

3) install dependancies of pg -- sudo apt install libpq-dev

4. install pg -- gem install pg

---------------------------------------Rails Project---------------------------

3) Create Rails Project - rails new inventory_management_system -d postgresqls   # optional -d postgres ( using postgresql database)

-----------------------------------Database-----------------------------------
1) config --> database.yml
	
	database: databasename  #inventory_management_system
	username: root
	password: password
	host: localhost or Ip address
	port: 5432
	
2) create database --> 

	rake db:create            #created database databasename   #inventory_management_system                 
	
 
	
--------------------------------Models----------------------------------------

1) Generating a Model -(command) rails generate model Product title:string body:text   # title and body are two columns of table [optional]

	Output :   		invoke  active_record
					create    db/migrate/20220122070723_create_products.rb  # create migrate file inside db <timestamp>_create_articles.rb
					create    app/models/product.rb						# create model file	inside app/models
					invoke    test_unit
					create      test/models/product_test.rb
					create      test/fixtures/products.yml
						  
	

-------------------------------Database Migrations--------------------------- 

migrate file : 
					class CreateProducts < ActiveRecord::Migration[7.0]
					  def change
						create_table :products do |t|
						  t.string :title                   # title and body are two columns of table
						  t.text :body

						  t.timestamps
						end
					  end
					end			
					
----------run migration-----------	
				
	syntax: rails db:migrate
	
		                           ---Output---
	
		== 20220122070723 CreateProducts: migrating ===================================
		-- create_table(:products)
		   -> 0.2036s
		== 20220122070723 CreateProducts: migrated (0.2038s) ==========================

3) check table in database 

 	syntax: rails db
Password for user postgres: 
psql (14.1 (Ubuntu 14.1-2.pgdg20.04+1))
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
Type "help" for help.

			inventory_management_system=# \dt
						List of relations
			Schema |         Name         | Type  |  Owner   
			-------+----------------------+-------+----------
			public | ar_internal_metadata | table | postgres
			public | products             | table | postgres
			public | schema_migrations    | table | postgres
			(3 rows)

			inventory_management_system=# \dt products 
						List of relations
			Schema |   Name   | Type  |  Owner   
			--------+----------+-------+----------
			public | products | table | postgres
			(1 row)

			inventory_management_system=# \d products 
			                 Table "public.products"
			Column   |              Type              | Collation | Nullable |               Default                
			------------+--------------------------------+-----------+----------+--------------------------------------
			id         | bigint                         |           | not null | nextval('products_id_seq'::regclass)
			title      | character varying              |           |          | 
			body       | text                           |           |          | 
			created_at | timestamp(6) without time zone |           | not null | 
			updated_at | timestamp(6) without time zone |           | not null | 
			Indexes:
			"products_pkey" PRIMARY KEY, btree (id)


-----------------------------------Create table --------------------------------

step - 1) ruby generate model Category     # create model Category

step - 2) Add column in migrate file

		 class CreateCategories < ActiveRecord::Migration[7.0]
		  def change
			create_table :categories do |t|
			  t.string :name                         # add column name 

			  t.timestamps
			end
		  end
		end

step - 3) rake db:migrate               # this will create or mapping categories table in postgresql


---------------------------------------Add Column to Table-------------------------------------

step - 1) First generate migration

		syntax: rails generate migrattion AddNameToBrands                #AddColumnToTable" or "RemoveColumnFromTable	
		
		# create a empty migration file 
		
			class AddNameToBrand < ActiveRecord::Migration[7.0]
			  def change
			  end
			end
			
step - 2) Add column manually 
			
			class AddNameToBrand < ActiveRecord::Migration[7.0]
			  def change
				add_column :brands, :name, :string                  # add manually 
			  end
			end				
			
step - 3) run migartion

		  syntax: rake db:migrate 
		  
		  -----------------------Output-------------------------------------------
		  
		== 20220122095544 AddNameToBrand: migrating ===================================
		-- add_column(:brands, :name, :string)
		   -> 0.1144s
		== 20220122095544 AddNameToBrand: migrated (0.1146s) ==========================

			
			
			

						--------or----------
						
step - 1) syntax: rails generate migration AddNameToBrands name:string
				
			class AddNameToBrand < ActiveRecord::Migration[7.0]
			  def change
			  add_column :brands, :name, :string
			  end
			end

step - 2)  run migartion

		  syntax: rake db:migrate 
		  
		  ---------------------------Output-------------------------------------------
		  
		== 20220122095544 AddNameToBrand: migrating ===================================
		-- add_column(:brands, :name, :string)
		   -> 0.1144s
		== 20220122095544 AddNameToBrand: migrated (0.1146s) ==========================


----------------------------Remove Column from Table-------------------------------------

step - 1) First generate migration

		syntax: rails generate migrattion RemoveTitleToProducts title:string               #AddColumnToTable" or "RemoveColumnFromTable	
		
		class RemoveTitleFromProducts < ActiveRecord::Migration[7.0]
		  def change
			remove_column :products, :title, :string
		  end
		end

step - 2)  run migartion

		  syntax: rake db:migrate 
		  
		  ---------------------------Output-------------------------------------------
		  
		== 20220122102705 RemoveTitleFromProducts: migrating ==========================
		-- remove_column(:products, :title, :string)
		   -> 0.0593s
		== 20220122102705 RemoveTitleFromProducts: migrated (0.0595s) =================

		
---------------------------------------Rename Column to Table-------------------------------------

step - 1) First generate migration

		syntax: rails generate migration RenameBodyToNameInProducts                #RenameColumnToNewNameInTable"	
		
		# create a empty migration file 
		
			class AddNameToBrand < ActiveRecord::Migration[7.0]
			  def change
			  end
			end
			
step - 2) Rename column manually
 
		class RenameBodyToNameInProducts < ActiveRecord::Migration[7.0]
		  def change
			rename_column :products, :body, :name                           # Rename Column Manual
		  end
		end
		
step - 3) run migartion

		  syntax: rake db:migrate 
		  
		  -----------------------Output-------------------------------------------
		  
		== 20220122105344 RenameBodyToNameInProducts: migrating =======================
		-- rename_column(:products, :body, :name)
		   -> 0.0102s
		== 20220122105344 RenameBodyToNameInProducts: migrated (0.0105s) ==============



---------------------------------------Change Datatype for a column in Table-------------------------------------

step - 1) First generate migration

		syntax: rails generate migration ChangeDataTypeForNameInProducts              	
		
			
step - 2) Change Data Type                                      # 
 
		class ChangeDataTypeForNameInProducts < ActiveRecord::Migration[7.0]
		  def change
			change_column :products, :name, :string 
		  end
		end
		
step - 3) run migartion

		  syntax: rake db:migrate 
		  
Note that change_column command is irreversible.
		  

---------------------------------------Set a Not Null Column-------------------------------------

synatax:

		class ChangeColumnsToNotNullInProducts < ActiveRecord::Migration[7.0]
		  def change
			change_column_null :products, :category_id, false
			change_column_null :products, :category_name, false
			change_column_null :products, :brand_id, false
			change_column_null :products, :brand_name, false
		  end
		end
				  





	
