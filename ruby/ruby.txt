-----------------------------------------------RUBY and RVM(Ruby Version Manager-1.29.12) ----------------------------------------

RVM- Ruby Version Manager is a tool meant to use the command line for installing and managing the various ruby versions easily

1) Install RVM - 

	i)      Add RVM GPG key-- packages to install Ruby Version Manager
	
		curl -sSL https://rvm.io/mpapis.asc | gpg --import -
		curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -
	
	ii)	Install RVM --------
	
		curl -sSL https://get.rvm.io | bash -s stable 
	
	iii) Check the RVM version-----------
		
		rvm --version
		------>  rvm 1.29.12 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
		

2) Install Ruby

	i) List Ruby version available to install 
	
		rvm list known
		
	ii) Install the latest ruby or particular version
	
		1) rvm install ruby   (Install Latest Version)
		2) rvm install 2.7.2  (Particular old version)
		
		
3) some RVM Important commands -->
		
		    Description					Commands
		    -----------------------------------------------------------
		    
	i) 	List All Ruby Versions - 				rvm list 	(=> - current
											 =* - current && default
											 * - default)

	ii)	Install Specific Ruby Version-			rvm install 2.7.2
	iii)	Uninstall Specific Ruby Version-			rvm uninstall 2.7.2
	iv) 	set(switch) Ruby version as current version		rvm use 1.9.2
	v)	set Ruby version as default version			rvm use 1.9.2 --default
	vi) 	RVM update to stable version:				rvm get stable
	vii)	Upgrade the Ruby version:				rvm upgrade 3.0.0
	viii)	full list of all commands:				rvm help
	ix) 	Current ruby version:					rvm current
	x) 	switch to default ruby:				rvm use default
	
	

--------------------------------------------RUBY(2.7.2 and 3.0.0 versions)-----------------------------------------

1) Interactive Ruby----

			$ ruby  or irb
			 puts "Hello"  (Press Ctrl+D for run and exit)
		output-- Hello
			

	
2) Reversed words ----

			BEGIN 		do 		next 		then
			END 		else 		nil 		true
			alias 		elsif 		not 		undef
			and 		end 		or 		unless
			begin 		ensure 	redo 		until
			break 		false 		rescue 	when
			case 		for 		retry 		while
			class 		if 		return 	while
			def 		in 		self 		__FILE__
			defined? 	module 	super 		__LINE__
				
				
3)  Data Types ---- 

			    Numbers- 
			    		e.g. -  5/2 = 2 
			    			5.0/2 = 2.5
			    		
			    
			    Boolean- true.false   (true belong TrueClass and false belong to FalseClass
			    
			    Strings- a='ab'  
			    
			    Hashes-  a={'A'=>1,'B'=>2}

			    Arrays-  a=[5,'A']

			    Symbols - a=:ab  
			    
			    
			  Some points to remember----
			  
			  1) a.object_id -  return object id
			  2) a.size 	  -  return size
			  3) a.class     -   return class of that particular object
			  
			  
			  
			  
			  

	
	
		
	
