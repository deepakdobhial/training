--------------------------------------------------------Array------------------------------
 --> An array is a collection of different or similar items, stored at contiguous memory locations. They can hold objects like integer, number, hash, string, symbol or any other array. 
 
--> indexing - start from 0 & The negative index starts with -1 from the end of the array


1) Creating Arrays-
		Mostly common used methods-
		
	    i) Using literal constructor []
	    
	    	3.0.0 :007 > a=['a','b',52,65]
			 => ["a", "b", 52, 65] 
			3.0.0 :008 > a
			 => ["a", "b", 52, 65] 
			3.0.0 :009 > a.class
			 => Array 
			 
			 3.0.0 :021 > arr4=Array("a".."z")
			 3.0.0 :022 > arr4
			 => ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", 					 "y", "z"] 

	    
	   ii) Using new class method
	   
	 		3.0.0 :010 > arr=Array.new
 			=> [] 
 			arr=Array.new()
			 => [] 

			3.0.0 :014 > arr1=Array.new(7)
 			=> [nil, nil, nil, nil, nil, nil, nil] 
 			
 			3.0.0 :015 > arr2=Array.new(4,'abc')
 			=> ["abc", "abc", "abc", "abc"] 
 			
 			3.0.0 :051 > even=Array.new(5) {|e| e=e*2}
			 => [0, 2, 4, 6, 8] 


 2) Accessing Elements -->
 
 			3.0.0 :045 > arr1
 			=> [5, 4, 3, "a"] 
 			
 			3.0.0 :036 > arr1[0]
			 => 5 
			3.0.0 :037 > arr1[1]
			 => 4 
			3.0.0 :038 > arr1[3]
			 => "a" 
			3.0.0 :039 > arr1[4]
			 => nil 
			3.0.0 :040 > arr1[-1]
			 => "a" 
			3.0.0 :041 > arr1[-2]
			 => 3 
			3.0.0 :042 > arr1[-5]
			 => nil 

 			3.0.0 :043 > arr1[2,3]              # 2 is start index & 3 is length
			 => [3, "a"] 
			3.0.0 :044 > arr1[1,3]
			 => [4, 3, "a"] 
						
 		    3.0.0 :053 > even[0..3]
 			=> [0, 2, 4, 6] 

 			3.0.0 :057 > even.at(0)
			 => 0 
			3.0.0 :058 > even.at(1)
			 => 2 
			3.0.0 :059 > even.at(3)
			 => 6 

 
